import typer
from typing_extensions import Annotated

from scripts.format_novel import execute as novel_formatter
from scripts.metadata.sources import (AVAILIABLE_SOURCES, MetadataSource,
                                      get_source)

app = typer.Typer(help="Collection of scripts that clean, extract, make requests and format a novel.")

OPTIONS_HELP_TEXT = {
    "root" : "Root folder generated by the lightnovel-crawler script",
    "source": "Source from which the metadata will be extracted. Available Sources: ['WebnovelDotCom', 'LightnovelUpdates']",
    "novel_uri" : "Uri for the novel from the selected source website"
}

def source_callback(value: str) -> MetadataSource:
    """Verifiy source provided and if found, returns Source callback"""
    value = value.lower().strip()

    if value not in AVAILIABLE_SOURCES:
        raise typer.BadParameter(typer.style(f"Available sources are: ['WebnovelDotCom', 'LightnovelUpdates']. Choose one of them!", fg=typer.colors.RED, bold=True))

    return value

@app.command('metadata', help="This script extracts some required metadatas of a given novel.")
def get_metadata(
    root: Annotated[str, typer.Option('--root','-r', help=OPTIONS_HELP_TEXT["root"], prompt="Root Folder")] = None,
    source: Annotated[str, typer.Option('--source','-s', help=OPTIONS_HELP_TEXT["source"], callback=source_callback, prompt=True)] = None,
    novel_uri: Annotated[str, typer.Option('--novel-uri', '-u',help=OPTIONS_HELP_TEXT["novel_uri"], prompt="Novel URI")] = None
):
    metadata_source = get_source(source)(root, novel_uri)
    metadata_source.execute()


@app.command('format', help="This script extracts all the chapters and metadatas of a given root folder (folder generated by the lightnovel-crawler script) into a single json that follows the Stalkers API standards.")
def format_novel(
    root: Annotated[str, typer.Option('--root','-r', help=OPTIONS_HELP_TEXT["root"], prompt="Root Folder")] = None,
):
    format_novel(root)


@app.command('all', help="Run all script together.")
def full_format(
    root: Annotated[str, typer.Option('--root','-r', help=OPTIONS_HELP_TEXT["root"], prompt="Root Folder")] = None,
    source: Annotated[str, typer.Option('--source','-s', help=OPTIONS_HELP_TEXT["source"], callback=source_callback, prompt=True)] = None,
    novel_uri: Annotated[str, typer.Option('--novel-uri', '-u',help=OPTIONS_HELP_TEXT["novel_uri"], prompt="Novel URI")] = None
):
    metadata_source = get_source(source)(root, novel_uri)
    metadata_source.execute()
    novel_formatter(root)


@app.command('req', help="To be implemented...")
def request_stalkers_api():
    pass

if __name__ == "__main__":
    app()